; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "CGIMunich"
#define MyAppVersion "1.0"
#define MyAppPublisher "Munich Intelligence"
#define MyAppExeName "CGI_Munich_Main.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
#define InstallersDir "C:\Users\shaik\OneDrive\Projects\Backup\Active\Working\GCI_Munich_app\req\"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{9D9C55DF-42EE-402D-8637-610E3DFB510C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=C:\Users\shaik\OneDrive\Projects\Backup\Active\Working\GCI_Munich_app
OutputBaseFilename=CGIMunich Setup
SetupIconFile=C:\Users\shaik\OneDrive\Projects\Backup\Active\Working\GCI_Munich_app\assets\national-emblem.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\shaik\OneDrive\Projects\Backup\Active\Working\GeneralConsulateIndiaMunich_Project\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\shaik\OneDrive\Projects\Backup\Active\Working\GCI_Munich_app\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Registry]
Root: HKLM; Subkey: "SOFTWARE\MySoftware\G2Database"; ValueType: string; ValueName: Port; ValueData: {code:GetPort}; Flags: createvalueifdoesntexist uninsdeletekeyifempty uninsdeletevalue
Root: HKLM; Subkey: "SOFTWARE\MySoftware\G2Database"; ValueType: string; ValueName: ServiceName; ValueData: {code:GetServiceName}; Flags: createvalueifdoesntexist uninsdeletekeyifempty uninsdeletevalue

[FILES]
Source: "{#InstallersDir}MysqlServer\mysql-installer-community-5.7.36.1.msi"; DestDir: "{tmp}"; Flags: ignoreversion nocompression; 
Source: "{#InstallersDir}MysqlServer\script.txt"; DestDir: "{app}\mysql\bin"; Flags: ignoreversion nocompression ; 
Source: "{#InstallersDir}MysqlServer\users.bat"; DestDir: "{app}\mysql\bin"; Flags: ignoreversion nocompression ; 


[CODE]

var

lblPort: TLabel;
lblServiceName: TLabel;
ePort: TEdit;
eServiceName: TEdit;

procedure frmDBSettingsReg_Activate(Page: TWizardPage);
begin
end;

function frmDBSettingsReg_ShouldSkipPage(Page: TWizardPage): Boolean;
begin
Result := False;
end;

function frmDBSettingsReg_BackButtonClick(Page: TWizardPage): Boolean;
begin
Result := True;
end;

function frmDBSettingsReg_NextButtonClick(Page: TWizardPage): Boolean;
begin
Result := True;
end;

procedure frmDBSettingsReg_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm: Boolean);
begin
end;

function frmDBSettingsReg_CreatePage(PreviousPageId: Integer): Integer;
var
Page: TWizardPage;
begin
Page := CreateCustomPage(
PreviousPageId,
ExpandConstant('{cm:AdvancedSettings}'),
ExpandConstant('{cm:AdvancedDescription}')
);

{ lblPort }
lblPort := TLabel.Create(Page);
with lblPort do
begin
Parent := Page.Surface;
Left := ScaleX(24);
Top := ScaleY(30);
Width := ScaleX(35);
Height := ScaleY(13);
Caption := ExpandConstant('{cm:Port}');
end;

{ lblServiceName }
lblServiceName := TLabel.Create(Page);
with lblServiceName do
begin
Parent := Page.Surface;
Left := ScaleX(24);
Top := ScaleY(60);
Width := ScaleX(52);
Height := ScaleY(13);
Caption := ExpandConstant('{cm:ServiceName}') ;
end;


{ ePort }
ePort := TEdit.Create(Page);
with ePort do
begin
Parent := Page.Surface;
Left := ScaleX(130);
Top := ScaleY(27);
Width := ScaleX(185);
Height := ScaleY(21);
Text := '3306';
TabOrder := 0;
end;

{ eServiceName }
eServiceName := TEdit.Create(Page);
with eServiceName do
begin
Parent := Page.Surface;
Left := ScaleX(130);
Top := ScaleY(56);
Width := ScaleX(185);
Height := ScaleY(21);
Text := 'G2Database';
TabOrder := 1;
end;



with Page do
begin
OnActivate := @frmDBSettingsReg_Activate;
OnShouldSkipPage := @frmDBSettingsReg_ShouldSkipPage;
OnBackButtonClick := @frmDBSettingsReg_BackButtonClick;
OnNextButtonClick := @frmDBSettingsReg_NextButtonClick;
OnCancelButtonClick := @frmDBSettingsReg_CancelButtonClick;
end;

Result := Page.ID;
end;

function GetPort(param: String): String;
begin
  Result := Trim(ePort.Text);
end;
function GetServiceName(param: String): String;
begin
  Result := Trim(eServiceName.Text);
end;


function ShouldSkipPage(curPageId:Integer):Boolean;
begin
      if curPageID <> 100 then //Need to check if in your case is same ID
          Result := false
      else if ((curPageID = 100) and not WizardIsTaskSelected('Mysql')) then
          Result := true
end;


[RUN]

;Install MySQL
Filename: msiexec.exe; Parameters:"/i""{tmp}\mysql-installer-community-5.7.36.1.msi"" /qn INSTALLDIR=""YOUR RUTE"" DATADIR=""YOUR RUTE"" PORT=""{code:GetPort}"" "; WorkingDir:{app}; StatusMsg:"INSTALLING MYSQL DB"; Flags: runhidden; 
;Install Service
Filename: YOUR RUTE\mysqld.exe; Parameters:"--install {code:GetServiceName} --port=""{code:GetPort}"""; WorkingDir:{app}; Flags: runhidden; 
;Start Service
Filename: net.exe;  Parameters: start {code:GetServiceName}; WorkingDir:{app}; StatusMsg:"START MYSQL DATABASE"; Flags: runhidden;
;Open Firewall Port
Filename: netsh; Parameters: firewall add portopening TCP {code:GetPort} {code:GetServiceName};  Flags: runhidden; StatusMsg: "CONFIGURING DATABASE"; 
;Create Custom users
 Filename: {app}\mysql\bin\users.bat; Parameters:" {code:MySQLPath} {code:FormatRute} {code:GetPort}"; StatusMsg:"CONFIGURING DATABASE";Flags: runhidden;
